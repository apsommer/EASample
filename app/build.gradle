apply plugin: 'com.android.application'

// put api token in a local file to keep it out of version control
def properties = new Properties()
properties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.sommerengineering.easample"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "TOKEN", properties['token'] // Java accessible
        resValue "string", "MAP_KEY", properties['mapKey'] // XML accessible
    }

    // todo add whitelabel "flavor" dimensions here .. for example a set of unique backend endpoints
    //  dimension = "greenlots"
    //  dimension = "sulzer-us"

    buildTypes {
        release {
            // signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // use Java 8 in project
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {

    // core Java
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // UI
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "com.google.android.gms:play-services-maps:$play_services_maps"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_v4"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.annotation:annotation:$annotation"

    // JUnit
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressor_core"

    // Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$converter_gson"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_viewmodel"

    // navigation
    implementation "androidx.navigation:navigation-fragment:$navigation_fragment"
    implementation "androidx.navigation:navigation-ui:$navigation_ui"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_android"
    annotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_android_compiler"

        // instrumentation tests
        androidTestImplementation  "com.google.dagger:hilt-android-testing:$hilt_android_testing"
        androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_android_compiler"

        // unit tests
        testImplementation "com.google.dagger:hilt-android-testing:$hilt_android_testing"
        testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_android_compiler"
}
